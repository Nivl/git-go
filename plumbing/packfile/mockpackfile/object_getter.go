// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Nivl/git-go/plumbing/packfile (interfaces: ObjectGetter)

// Package mockpackfile is a generated GoMock package.
package mockpackfile

import (
	plumbing "github.com/Nivl/git-go/plumbing"
	object "github.com/Nivl/git-go/plumbing/object"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockObjectGetter is a mock of ObjectGetter interface
type MockObjectGetter struct {
	ctrl     *gomock.Controller
	recorder *MockObjectGetterMockRecorder
}

// MockObjectGetterMockRecorder is the mock recorder for MockObjectGetter
type MockObjectGetterMockRecorder struct {
	mock *MockObjectGetter
}

// NewMockObjectGetter creates a new mock instance
func NewMockObjectGetter(ctrl *gomock.Controller) *MockObjectGetter {
	mock := &MockObjectGetter{ctrl: ctrl}
	mock.recorder = &MockObjectGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockObjectGetter) EXPECT() *MockObjectGetterMockRecorder {
	return m.recorder
}

// GetObject mocks base method
func (m *MockObjectGetter) GetObject(arg0 plumbing.Oid) (*object.Object, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetObject", arg0)
	ret0, _ := ret[0].(*object.Object)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetObject indicates an expected call of GetObject
func (mr *MockObjectGetterMockRecorder) GetObject(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetObject", reflect.TypeOf((*MockObjectGetter)(nil).GetObject), arg0)
}
