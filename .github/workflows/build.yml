name: Build
on: [push]
jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v2

      - name: Get Go version
        id: gover
        run: echo "::set-output name=value::^$(grep 'go 1.' go.mod | cut -d ' ' -f 2)"
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ steps.gover.outputs.value }}

      - name: Build
        run: go build -race ./...

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v2

      - name: Get Go version
        id: gover
        run: echo "::set-output name=value::^$(grep 'go 1.' go.mod | cut -d ' ' -f 2)"
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ steps.gover.outputs.value }}

      - name: Test
        run: go test -race -timeout 3m -coverprofile coverage.txt ./...

      - uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
          verbose: true
